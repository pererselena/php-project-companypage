<?php

namespace Elpr\Product;

use Anax\Commons\AppInjectableInterface;
use Anax\Commons\AppInjectableTrait;

/**
 * A controller to handle request to products.
 *
 * @SuppressWarnings(PHPMD.TooManyPublicMethods)
 */
class ProductController implements AppInjectableInterface
{
    use AppInjectableTrait;



    /**
     * @var object $product reference to the product
     * object to handle everything db related.
     * @var object $content reference to the content
     * object to handle everything db related.
     */
    private $product;
    private $content;



    /**
     * The initialize will create a new object and create a product object.
     *
     * @return void
     */
    public function initialize() : void
    {
        // Use to initialise member variables.
        $this->product = new Product($this->app->db);
        $this->content = new \Elpr\Content\Content($this->app->db);
        // Use $this->app to access the framework services.
    }



    /**
     * This is the index method action, it handles:
     * ANY METHOD mountpoint
     * ANY METHOD mountpoint/
     * ANY METHOD mountpoint/index
     *
     * @return object as page
     */
    public function indexAction() : object
    {
        $title = "Product database | oophp";
        $searchProduct = $this->app->session->get("searchProduct");
        $offer = $this->content->getLatest("offer");
        if ($searchProduct) {
            $resultset = $this->product->searchProduct($searchProduct);
            $this->app->session->set("searchProduct", null);
        } else {
            $resultset = $this->product->getAllProducts();
        }

        $this->app->page->add("product/index", [
            "resultset" => $resultset,
            "searchProduct" => $searchProduct,
            "offer" => $offer
        ]);

        return $this->app->page->render([
            "title" => $title,
        ]);
    }

    /**
     * Search products post action
     *
     *
     * @return object AS redirect
     */
    public function searchproductActionPost() : object
    {
        $search = $this->app->request->getPost("searchProduct");
        $this->app->session->set("searchProduct", $search);

        return $this->app->response->redirect("product/index");
    }

    /**
     * Update product
     *
     * @param int $id
     * @return object As page or redirect
     */
    public function updateActionGet($id) : object
    {
        $title = "Edit products | oophp";
        $role = $this->app->session->get("role", null);
        if ($role !== "admin") {
            $this->app->response->redirect("login");
        }

        $res = $this->product->getProduct($id);

        $this->app->page->add("product/edit", [
            "resultset" => $res,
        ]);

        return $this->app->page->render([
            "title" => $title,
        ]);
    }

    /**
     * Update product post action
     *
     * @param int $id
     * @return object AS redirect
     */
    public function updateActionPost($id) : object
    {
        $name = $this->app->request->getPost("name");
        $description = $this->app->request->getPost("description");
        $image = $this->app->request->getPost("image");
        $category = $this->app->request->getPost("category");
        $profile = $this->app->request->getPost("profile");
        $sunscreen = $this->app->request->getPost("sunscreen");
        $options = $this->app->request->getPost("options");
        $recommended = $this->app->request->getPost("recommended");
        $params = [
            $name,
            $description,
            $image,
            $category,
            $profile,
            $sunscreen,
            $options,
            $recommended,
            $id
        ];
        $res = $this->product->updateProduct($params);
        if ($res === true) {
            return $this->app->response->redirect("product");
        }
        $this->app->page->add("content/error", [
            "message" => "Couldn't save to the database :("
        ]);

        return $this->app->response->redirect("product");
    }


    /**
     * Admin get action
     *
     * @return object As page or redirect
     *
     */
    public function adminActionGet() : object
    {
        $title = "Admin | oophp";
        $role = $this->app->session->get("role", null);
        if ($role !== "admin") {
            $this->app->response->redirect("login");
        }

        $product = $this->product->getAllProducts();

        $this->app->page->add("product/admin", [
            "resultset" => $product,
        ]);

        return $this->app->page->render([
            "title" => $title,
        ]);
    }

    /**
     * Get product
     *
     * @param int $id
     * @return object As page
     */
    public function productActionGet($id) : object
    {
        $title = "Edit | oophp";

        $product = $this->product->getProduct($id);

        $this->app->page->add("product/product", [
            "product" => $product,
        ]);

        return $this->app->page->render([
            "title" => $title,
        ]);
    }



    /**
     * Delete product
     *
     * @param int $id
     * @return object As page or redirect
     */
    public function deleteActionGet($id) : object
    {
        $title = "Delete products | oophp";
        $role = $this->app->session->get("role", null);
        if ($role !== "admin") {
            $this->app->response->redirect("login");
        }

        $res = $this->product->getProduct($id);

        $this->app->page->add("product/delete", [
            "resultset" => $res,
        ]);

        return $this->app->page->render([
            "title" => $title,
        ]);
    }

    /**
     * Delete product post action
     *
     * @param int $id
     * @return object AS redirect
     */
    public function deleteActionPost($id) : object
    {
        $this->product->deleteProduct($id);

        return $this->app->response->redirect("product");
    }
    /**
     * Create product
     *
     *
     * @return object As page or redirect
     */
    public function createActionGet() : object
    {
        $title = "Add products | oophp";
        $role = $this->app->session->get("role", null);
        if ($role !== "admin") {
            $this->app->response->redirect("login");
        }

        $this->app->page->add("product/add");

        return $this->app->page->render([
            "title" => $title,
        ]);
    }

    /**
     * Create product post action
     *
     *
     * @return object AS page or redirect
     */
    public function createActionPost() : object
    {
        $name = $this->app->request->getPost("name");
        $description = $this->app->request->getPost("description");
        $image = $this->app->request->getPost("image");
        $category = $this->app->request->getPost("category");
        $profile = $this->app->request->getPost("profile");
        $sunscreen = $this->app->request->getPost("sunscreen");
        $options = $this->app->request->getPost("options");
        $recommended = $this->app->request->getPost("recommended");
        $params = [
            $name,
            $description,
            $image,
            $category,
            $profile,
            $sunscreen,
            $options,
            $recommended
        ];
        $res = $this->product->create($params);
        if ($res === true) {
            return $this->app->response->redirect("product");
        }
        $this->app->page->add("content/error", [
            "message" => "Couldn't save to the database :("
        ]);
        return $this->app->page->render();
    }
}

